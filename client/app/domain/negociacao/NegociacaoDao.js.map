{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","listaTodos","negociacoes","cursor","openCursor","atual","result","value","_data","_quantidade","_valor","push","continue","apagaTodas","clear"],"mappings":";;;;;;AAASA,sB,iBAAAA,U;;;AAEF,kBAAMC,aAAN,CAAoB;AACvBC,4BAAYC,UAAZ,EAAuB;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAmB,aAAnB;AACH;;AAEDC,yBAASC,UAAT,EAAoB;AAChB,2BAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;;AAElC,8BAAMC,UAAU,KAAKP,WAAL,CACXQ,WADW,CACC,CAAC,KAAKP,MAAN,CADD,EACgB,WADhB,EAEXQ,WAFW,CAEC,KAAKR,MAFN,EAGXS,GAHW,CAGPP,UAHO,CAAhB;;AAKAI,gCAAQI,SAAR,GAAoBC,KAAKP,SAAzB;;AAEAE,gCAAQM,OAAR,GAAkBD,KAAK;AACnBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,mCAAO,sCAAP;AACH,yBAHD;AAIH,qBAbM,CAAP;AAcH;;AAEDY,6BAAY;AACR,2BAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,8BAAMa,cAAc,EAApB;;AAEA,8BAAMC,SAAS,KAAKpB,WAAL,CACVQ,WADU,CACE,CAAC,KAAKP,MAAN,CADF,EACgB,WADhB,EAEVQ,WAFU,CAEE,KAAKR,MAFP,EAGVoB,UAHU,EAAf;;AAKAD,+BAAOT,SAAP,GAAmBC,KAAK;AACpB,kCAAMU,QAAQV,EAAEI,MAAF,CAASO,MAAvB;AACA,gCAAGD,KAAH,EAAU;AACN,sCAAMnB,aAAa,IAAIP,UAAJ,CACnB0B,MAAME,KAAN,CAAYC,KADO,EAEnBH,MAAME,KAAN,CAAYE,WAFO,EAGnBJ,MAAME,KAAN,CAAYG,MAHO,CAAnB;AAIAR,4CAAYS,IAAZ,CAAiBzB,UAAjB;AACAmB,sCAAMO,QAAN;AACH,6BAPD,MAOO;AACH;AACAxB,wCAAQc,WAAR;AACH;AACJ,yBAbD;;AAeAC,+BAAOP,OAAP,GAAiBD,KAAK;AAClBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,mCAAO,yCAAP;AACH,yBAHD;AAKH,qBA5BM,CAAP;AA6BH;;AAEDwB,6BAAY;AACR,2BAAO,IAAI1B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;;AAEnC,8BAAMC,UAAU,KAAKP,WAAL,CACXQ,WADW,CACC,CAAC,KAAKP,MAAN,CADD,EACgB,WADhB,EAEXQ,WAFW,CAEC,KAAKR,MAFN,EAGX8B,KAHW,EAAhB;;AAKAxB,gCAAQI,SAAR,GAAoBC,KAAKP,SAAzB;;AAEAE,gCAAQM,OAAR,GAAkBD,KAAK;AACnBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,mCAAO,wCAAP;AACH,yBAHD;AAKH,qBAdM,CAAP;AAeH;AAvEsB","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from './Negociacao.js';\n\nexport class NegociacaoDao {\n    constructor(connection){\n        this._connection = connection;\n        this._store      = \"negociacoes\";\n    }\n\n    adiciona(negociacao){\n        return new Promise((resolve, reject)=>{\n\n            const request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n            \n            request.onsuccess = e => resolve();\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível salvar a negociação');\n            }\n        });\n    }\n\n    listaTodos(){\n        return new Promise((resolve, reject)=>{\n            const negociacoes = [];\n\n            const cursor = this._connection\n                .transaction([this._store],'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            cursor.onsuccess = e => {\n                const atual = e.target.result;\n                if(atual) {\n                    const negociacao = new Negociacao(\n                    atual.value._data,\n                    atual.value._quantidade,\n                    atual.value._valor);\n                    negociacoes.push(negociacao);\n                    atual.continue();\n                } else {\n                    // resolvendo a promise com negociacoes\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível listar nas negociações');\n            };\n\n        });\n    }\n\n    apagaTodas(){\n        return new Promise((resolve, reject) =>{\n\n            const request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n            \n            request.onsuccess = e => resolve();\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível apagar as negociações');\n            };\n\n        });\n    }\n}"]}