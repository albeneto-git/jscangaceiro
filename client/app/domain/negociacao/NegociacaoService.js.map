{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAa;AACT,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,0CAAf,EACEC,IADF,CAEKC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAFd,EAIKC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBANN,CAAP;AASH;;AAEDe,mDAAmC;;AAE/B,2BAAO,KAAKZ,KAAL,CAAWE,GAAX,CAAe,4CAAf,EACEC,IADF,CAEKC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAFd,EAIKC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBANN,CAAP;AAQH;;AAEDgB,oDAAoC;;AAEhC,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,6CAAf,EACEC,IADF,CAEKC,SAASA,MAAMC,GAAN,CAAUC,UAAU,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAFd,EAIKC,OAAO;AACH,8BAAM,IAAId,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBANN,CAAP;AAQH;;AAED,sBAAMiB,yBAAN,GAAiC;;AAE7B,wBAAI;AACA,4BAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,KAAKhB,wBAAL,EAD4B,EAE5B,KAAKW,gCAAL,EAF4B,EAG5B,KAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,+BAAOE,QACFG,MADE,CACK,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAD1B,EACiD,EADjD,EAEFE,IAFE,CAEG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAFhC,CAAP;AAGC,qBATL,CASM,OAAMd,GAAN,EAAW;AACTe,gCAAQC,GAAR,CAAYhB,GAAZ;AACA,8BAAM,IAAId,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AACR;;AA1D0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n\n        return this._http.get('http://localhost:3000/negociacoes/semana')\n                .then(\n                    dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                    ,\n                    err => {\n                        throw new ApplicationException('Não foi possível obter as negociações');\n                    }\n                );\n\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http.get('http://localhost:3000/negociacoes/anterior')\n                .then(\n                    dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                    ,\n                    err => {\n                        throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n                    }\n                );\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n\n        return this._http.get('http://localhost:3000/negociacoes/retrasada')\n                .then(\n                    dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n                    ,\n                    err => {\n                        throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\n                    }\n                );\n    }\n\n    async obtemNegociacoesDoPeriodo(){\n        \n        try {\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n             ]);\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item),[])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n            } catch(err) {\n                console.log(err);\n                throw new ApplicationException('Não foi possível obter as negociações do período');\n            };\n    }\n\n}\n"]}